name: Lint AutoFix Comment

on:
  # It looks like you can't target PRs-only comments
  # So we must run this workflow every time a new comment is added to issues and pull requests
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_comment-use-issue_comment
  # https://mmazzarolo.com/blog/2022-09-09-visual-regression-testing-with-playwright-and-github-actions/
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  lint-autofix-comment:
    # /!\ SECURITY CONCERNS
    # SUPER IMPORTANT - only trusted maintainers should be allowed to trigger this workflow
    # This will run on untrusted PR code with write permissions
    # A malicious user sending a PR should not be able to trigger it
    #
    # Trigger: "/lint-autofix"
    # Allowed authors: ['slorber', 'Josh-Cena']
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/lint-autofix') &&
      (
        github.event.comment.user.login == 'slorber' ||
        github.event.comment.user.login == 'Josh-Cena'
      )

    name: Lint AutoFix Comment
    runs-on: ubuntu-latest
    outputs:
      my-job-output-test: 'test'

    steps:

      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      # Debug
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          PR_CONTEXT: ${{ toJson(github.event.pull_request) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo "$PR_CONTEXT"
          echo "$STEPS_CONTEXT"

      - uses: actions/checkout@v4
        with:
          # repository: ${{ github.event.pull_request.head.repo.full_name }}
          # ref: ${{ github.event.pull_request.head.ref }}

          # see https://github.com/actions/checkout/issues/331#issuecomment-1438220926
          # ref: refs/pull/${{ github.event.issue.number }}/head

          # see https://github.com/actions/checkout/issues/331#issuecomment-1567674767
          # ref: ${{ steps.get-branch.outputs.branch }}

          # see https://github.com/actions/checkout/issues/331#issuecomment-707103442
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
          token: ${{ secrets.PAT_AUTOLINT }}

      - name: Installation
        run: npm install

      - name: AutoFix Format
        run: npm run lint:fix

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "refactor: apply lint autofix v2"
